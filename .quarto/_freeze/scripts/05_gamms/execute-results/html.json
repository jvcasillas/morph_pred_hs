{
  "hash": "aebb96728e0a2049e44b752b50d66dfe",
  "result": {
    "markdown": "---\ntitle: \"{{< var title >}}: {{< var version >}}\"\nsubtitle: \"GAMMs\"\nauthor: \"{{< var author.name >}}\"\ndate: \"2022-05-21\"\nformat:\n  html: default\n  pdf: default\n---\n\n# Setup\n\n## Load libraries, helpers, and data\n\nLoad everything we need for the analyses.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries and helpers\nsource(here::here(\"scripts\", \"00_libraries.R\"))\nsource(here::here(\"scripts\", \"01_helpers.R\"))\nsource(here::here(\"scripts\", \"04_load_data.R\"))\n```\n:::\n\n## Practice model\n\nFirst, we'll fit a model to the data of one participant to check and make sure everything is working ok. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Take subset of 1 participant\nmon01 <- stress_50 %>% \n  filter(id == \"mon01\", \n    time_zero > -10, time_zero < 20)\n\n# Set model formula\nformula <- bf(\n  target_count | trials(50) ~ 1 + stress + \n    s(time_zero, bs = \"cr\", k = 3) + \n    s(time_zero, by = stress, bs = \"cr\", k = 3) \n)\n\n# Get priors\nget_prior(\n  formula = formula, \n  family = binomial(link = \"logit\"), \n  data = mon01\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                        \n---------------------  ----------  --------------------------------------------\n                       b                                                       \n                       b           stime_zero_1                                \n                       b           stime_zero:stressOxytone_1                  \n                       b           stime_zero:stressParoxytone_1               \n                       b           stressParoxytone                            \nstudent_t(3, 0, 2.5)   Intercept                                               \nstudent_t(3, 0, 2.5)   sds                                                     \n                       sds         s(time_zero, bs = \"cr\", k = 3)              \n                       sds         s(time_zero, by = stress, bs = \"cr\", k = 3)\n:::\n\n```{.r .cell-code}\n# Set priors\nlog_spline_priors <- c(\n  prior(normal(0, 3), class = Intercept), \n  prior(normal(0, 10), class = b), \n  prior(student_t(3, 0, 1), class = sds)\n)\n\n# Fit test mod\ntest_mod <- brm(\n  formula = formula, \n  family = binomial(link = \"logit\"), \n  prior = log_spline_priors, \n  iter = 2000, warmup = 1000, cores = 4, \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.99, max_treedepth = 15), \n  data = mon01, \n  file = here(\"models\", \"gamms\", \"test_mod\")\n)\n```\n:::\n\n## Test plots of time course and marginal predicted estimates\n\nWe can use the posterior to take a look at the model fit. \n\n::: {.cell hash='05_gamms_cache/html/practice-plot-1_610c063f1073a7e041c2f2f3f1998fd0'}\n\n```{.r .cell-code}\n# Plot time course\ntest_mod %>% \n  emmeans(spec = ~ 1 + time_zero + stress, \n    at = list(time_zero = seq(-5.5, 11.5, 1)), \n    epred = T) %>% \n  gather_emmeans_draws() %>% \n  ggplot(., aes(x = time_zero, y = .value / 50, color = stress)) + \n    geom_hline(yintercept = 0.5, lty = 3) + \n    stat_lineribbon(size = 0.5) + \n    scale_color_brewer(name = NULL, palette = \"Dark2\", \n      labels = c(\"Paroxytone\\n(CANta)\", \"Oxytone\\n(canTO)\")) + \n    scale_fill_brewer(name = NULL, palette = \"Greys\", \n      labels = c(\"95%\", \"80%\", \"50%\")) + \n    labs(y = \"P(Target fixation)\", x = \"Time course\") + \n    coord_cartesian(xlim = c(-5.4, 11.4), ylim = c(-0.01, 1.02), \n      expand = F) + \n    clean_guide(position = c(0.8, 0.22), \n      title = \"Estimated prediction intervals\")\n```\n\n::: {.cell-output-display}\n![Target fixation as a function of stress for 1 participant.](05_gamms_files/figure-html/practice-plot-1-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/practice-plot-2_02fe2d8812d8fe06b61936c254cecf0d'}\n\n```{.r .cell-code}\n# Test at time 0\ntest_mod %>% \n  emmeans(\n  spec = ~ 1 + time_zero + stress, \n  at = list(time_zero = 0), \n  epred = TRUE\n  ) %>% \n  gather_emmeans_draws() %>% \n  mutate(prop = .value / 50) %>% \n  ggplot(., aes(x = prop, y = stress)) + \n    geom_rect(data = tibble(xmin = 0.49, xmax = 0.51), \n      inherit.aes = F, fill = \"lightblue\", color = \"white\", alpha = 0.2,\n      aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf)) +\n    geom_vline(xintercept = 0.5, lty = 3) + \n    stat_dotsinterval(quantiles = 100) + \n    geom_text(aes(label = label), hjust = 0, \n      data = tibble(stress = 0.5, prop = 0.51, \n        label = \"200ms after 1st syllable offset\")) +\n    labs(y = NULL, x = \"P(Target fixation)\") + \n    coord_cartesian(xlim = c(0.48, 0.68))\n```\n\n::: {.cell-output-display}\n![Proportion of target fixations 200ms after offset of 1st syllable. Data from one participant.](05_gamms_files/figure-html/practice-plot-2-1.png){width=100%}\n:::\n:::\n\n# Omnibus stress model\n\n\n\n### Logistic GAMM\n\nNow we set up the data set for the main model. \nMain concerns are (1) getting the factors ready for smoothing terms and (2) subsetting the time course to reduce computational load. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Set model formula\nformula_log_gamm_stress <- bf(\n  target_count | trials(50) ~ 1 + group * stress + \n    s(time_zero, bs = \"cr\") + \n    s(time_zero, by = stress, bs = \"cr\") +\n    #s(time_zero, id, bs = \"fs\", m = 1, k = 3) + \n    #s(time_zero, target, bs = \"fs\", m = 1, k = 3)\n    (1 | id)\n)\n\n# Take a look at the default priors\nget_prior(\n  formula = formula_log_gamm_stress, \n  family = binomial(link = \"logit\"), \n  data = stress_50_gamm\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                 \n---------------------  ----------  -------------------------------------\n                       b                                                \n                       b           groupHL                              \n                       b           groupHL:stressOxytone                \n                       b           groupL2                              \n                       b           groupL2:stressOxytone                \n                       b           stime_zero_1                         \n                       b           stime_zero:stressOxytone_1           \n                       b           stressOxytone                        \nstudent_t(3, 0, 2.5)   Intercept                                        \nstudent_t(3, 0, 2.5)   sd                                               \n                       sd                                               \n                       sd          Intercept                            \nstudent_t(3, 0, 2.5)   sds                                              \n                       sds         s(time_zero, bs = \"cr\")              \n                       sds         s(time_zero, by = stress, bs = \"cr\")\n:::\n\n```{.r .cell-code}\n# Set priors\nstress_log_gamm_priors <- c(\n  prior(normal(0, 3), class = Intercept), \n  prior(normal(0, 3), class = b), \n  prior(student_t(3, 0, 5.9), class = sds), \n  prior(cauchy(0, 2), class = sd)\n)\n\n# Fit model\ngamm_log_group_stress <- brm(\n  formula = formula_log_gamm_stress, \n  family =  binomial(link = \"logit\"), \n  prior = stress_log_gamm_priors, \n  iter = 2000, warmup = 1000, cores = 4, threads = threading(2), \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = stress_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_group_stress\")\n)\n```\n:::\n\n\n\n# Bilingual model\n\nNow we will fit a separate model to the bilingual groups' data. \nThis model includes standardized proficiency and use scores. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up data frame\nbi_50_gamm <- stress_50 %>% \n  filter(group != \"Monolingual\", \n    time_zero > -4, time_zero < 10) %>% \n  mutate(id = as.factor(id), \n    target = as.factor(target), \n    stress = as.ordered(stress), \n    stress = fct_relevel(stress, \"Paroxytone\"), \n    group = fct_relevel(group, \"HL\"))\n\n# Set contrasts for stress\ncontrasts(bi_50_gamm$stress) <- \"contr.treatment\" \n\n# Set model formula\nformula_gamm_bi <- bf(\n  target_count | trials(50) ~ 1 + group * stress + \n    prof_z + use_z + \n    s(time_zero, bs = \"cr\", k = 3) + \n    s(time_zero, by = stress, bs = \"cr\", k = 3) +\n    #s(time_zero, id, bs = \"fs\", m = 1, k = 3) + \n    #s(time_zero, target, bs = \"fs\", m = 1, k = 3)\n    (1 | id), \n  family = binomial(link = \"logit\")\n)\n\n# Get model default priors\nget_prior(\n  formula = formula_gamm_bi, \n  data = bi_50_gamm\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                        \n---------------------  ----------  --------------------------------------------\n                       b                                                       \n                       b           groupL2                                     \n                       b           groupL2:stressOxytone                       \n                       b           prof_z                                      \n                       b           stime_zero_1                                \n                       b           stime_zero:stressOxytone_1                  \n                       b           stressOxytone                               \n                       b           use_z                                       \nstudent_t(3, 0, 2.5)   Intercept                                               \nstudent_t(3, 0, 2.5)   sd                                                      \n                       sd                                                      \n                       sd          Intercept                                   \nstudent_t(3, 0, 2.5)   sds                                                     \n                       sds         s(time_zero, bs = \"cr\", k = 3)              \n                       sds         s(time_zero, by = stress, bs = \"cr\", k = 3) \n\n\n\nPrior predictive checks for bilingual model.\n:::\n\n```{.r .cell-code}\n# Set priors\nbi_gamm_priors <- c(\n  prior(normal(0, 1.5), class = Intercept), \n  prior(normal(0, 3), class = b), \n  prior(normal(0, 2), class = sds), \n  prior(cauchy(0, 2), class = sd)\n)\n\n# Fit model to test priors\ngamm_log_bi_stress_prior_fit <- brm(\n  formula = formula_gamm_bi, \n  family = binomial(link = \"logit\"), \n  prior = bi_gamm_priors, \n  iter = 2000, warmup = 1000, cores = 4, \n  sample_prior = \"only\", \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = bi_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_bi_stress_prior_fit\")\n)\n\n# Prior predictive checks\nbi_50_gamm %>% \n  expand(time_zero = seq(-4, 10, length.out = 50), group, stress, \n    id = \"ahs01\", prof_z = 0, use_z = 0) %>%\n  add_epred_draws(gamm_log_bi_stress_prior_fit, ndraws = 100) %>% \n  ggplot() + \n    aes(x = time_zero, y = .epred/50) + \n    facet_grid(stress ~ group) + \n    geom_line(aes(group = .draw), alpha = 0.2, size = 0.2, color = \"darkred\") + \n    labs(y = \"P(Target fixation)\", x = \"Time course\")\n```\n\n::: {.cell-output-display}\n![Prior predictive checks for bilingual model.](05_gamms_files/figure-html/fit-bilingual-gamm-1.png){width=100%}\n:::\n\n```{.r .cell-code}\n# Fit actual model\ngamm_log_bi_stress <- brm(\n  formula = formula_gamm_bi, \n  family = binomial(link = \"logit\"), \n  prior = bi_gamm_priors, \n  iter = 2000, warmup = 1000, cores = 4, \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = bi_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_bi_stress\")\n)\n```\n:::\n\n\n# Plots\n\n## All data\n\n::: {.cell hash='05_gamms_cache/html/group-comparison-plot_bed5ae0165c524c849620e1389bea520'}\n\n```{.r .cell-code}\n# Full model\ngamm_log_group_stress_draws <- gamm_log_group_stress %>% \n  emmeans(spec = ~ time_zero + stress + group, epred = T, \n    at = list(time_zero = seq(-4.8, 12.8, 0.25)), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws()\n\ngamm_log_group_stress_draws %>% \n  ggplot() + \n    aes(x = time_zero, y = .value / 50, color = group) + \n    facet_grid(. ~ stress) + \n    geom_hline(yintercept = 0.5, lty = 3, size = 0.7) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.7) + \n    stat_lineribbon(show.legend = F) + \n    stat_summary(fun = median, geom = \"line\") + \n    scale_fill_brewer(palette = \"Greys\") +\n    scale_color_manual(name = NULL, values = my_colors) + \n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(0.28, 1.02), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"P(Target fixation)\", x = \"Time course\") + \n    theme(legend.position = c(0.12, 0.86), \n          legend.text = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![Probability of fixating on target as a function of stress for all three groups. The time course is centered around the target syllable offset (point 0). Vertical lines represent 200ms after target syllable offset. Lines represent paroxytone ('CANta', green) and oxytone ('canTO', orange) conditions plus 95%, 80%, and 50% credible intervals.](05_gamms_files/figure-html/group-comparison-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/group-diff-smooths-plot_b83b43171e91aacce188611c4454686a'}\n\n```{.r .cell-code}\n# Calculate difference smooths\ngamm_log_group_stress_draws_diffs <- gamm_log_group_stress_draws %>% \n  pivot_wider(names_from = group, values_from = .value) %>% \n  mutate(`Monolingual - HL` = Monolingual - HL, \n    `Monolingual - L2` = Monolingual - L2, \n    `HL - L2` = HL - L2) %>% \n  pivot_longer(cols = `Monolingual - HL`:`HL - L2`, names_to = \"comp\", \n    values_to = \"val\")\n\n# Plot smooths\ngamm_log_group_stress_draws_diffs %>% \n  mutate(comp = fct_relevel(comp, \"Monolingual - HL\", \"Monolingual - L2\")) %>% \n  ggplot() + \n    facet_grid(comp ~ stress) + \n    aes(x = time_zero, y = val / 50) + \n    geom_hline(yintercept = 0, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(color = \"#11111100\", show.legend = F, \n      .width = c(0.1, 0.35, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)) +\n    scale_color_viridis_d(aesthetics = \"fill\", option = \"C\") +\n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(-0.15, 0.3), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"Difference smooths\", x = \"Time course\")\n```\n\n::: {.cell-output-display}\n![Pairwise difference smooths for paroxytone and oxytone items. From dark to light, colors represent 95%, 80%, 70%, 60%, 50%, 35% and 10% credible intervals.](05_gamms_files/figure-html/group-diff-smooths-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/group-prediction-plot_daef79afbb9789ea1b60cb7abb3cbd58'}\n\n```{.r .cell-code}\ngamm_log_group_stress %>% \n  emmeans(spec = ~ time_zero + stress + group, \n    at = list(time_zero = 4), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws() %>% \n  mutate(prop = plogis(.value)) %>% \n  ggplot() + \n    aes(x = prop, y = group, fill = stat(x > 0.51)) + \n    facet_grid(. ~ stress) + \n    geom_rect(data = tibble(x = c(0.49, 0.51), y = NULL), \n      aes(xmin = min(x), xmax = max(x), ymin = -Inf, ymax = Inf),\n      fill = \"lightblue\", alpha = 0.2, inherit.aes = FALSE) +\n    geom_vline(xintercept = 0.5, lty = 3) + \n    stat_slab(alpha = 0.7, color = \"white\", show.legend = F) +\n    stat_pointinterval(pch = 21, point_fill = \"white\", show.legend = F) +\n    scale_fill_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    scale_color_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    coord_cartesian(xlim = c(NA, NA)) + \n    labs(y = NULL, x = \"P(Target fixation)\")\n```\n\n::: {.cell-output-display}\n![Proportion of target fixations 200ms after the offset of 1st syllable for monolinguals, heritage learners, and L2 learners in paroxytone (*CANto*) and oxytone (*canTO*) conditions. The vertical dotted line marks chance (50%) surrounded by a &pm;1% region of practical equivalence (ROPE). Density mass of the posterior distribution that falls within the ROPE is discolored (pinkish).](05_gamms_files/figure-html/group-prediction-plot-1.png){width=100%}\n:::\n:::\n\n## Bilingual model\n\n::: {.cell hash='05_gamms_cache/html/bi-comparison-plot_19430ad424bfdfed2d65705ec00a1f31'}\n\n```{.r .cell-code}\ngamm_log_bi_stress_draws <- gamm_log_bi_stress %>% \n  emmeans(\n    spec = ~ time_zero + stress + group + use_z + prof_z, \n    epred = T, \n    at = list(\n      time_zero = seq(-4.8, 12.8, 0.25), \n      prof_z = 0, use_z = 0\n      ), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws()\n\ngamm_bi_p1 <- gamm_log_bi_stress_draws %>% \n  ggplot() + \n    aes(x = time_zero, y = .value / 50, color = stress) + \n    facet_grid(. ~ group) + \n    geom_hline(yintercept = 0.5, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(show.legend = F) + \n    stat_summary(fun = mean, geom = \"line\") + \n    scale_fill_brewer(palette = \"Greys\") +\n    scale_color_brewer(name = NULL, palette = \"Dark2\", \n      labels = c(\"Paroxytone\\n(CANta)\", \"Oxytone\\n(canTO)\")) +  \n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(0.28, 1.02), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4)) + \n    labs(y = \"P(Target fixation)\", x = NULL) + \n    theme(legend.position = c(0.12, 0.86), \n          legend.key.size = unit(1.7, 'lines'), \n          legend.text = element_text(size = 10), \n      axis.text.x = element_blank(), axis.ticks.x = element_blank())\n\n# Calculate difference smooths\ngamm_log_bi_stress_draws_diffs <- gamm_log_bi_stress_draws %>% \n  pivot_wider(names_from = stress, values_from = .value) %>% \n  mutate(diff = Paroxytone - Oxytone) \n\n# Plot smooths\ngamm_bi_p2 <- gamm_log_bi_stress_draws_diffs %>% \n  ggplot() + \n    aes(x = time_zero, y = diff / 50) + \n    facet_grid(. ~ group) + \n    geom_hline(yintercept = 0, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(color = \"#11111100\", show.legend = F, \n      .width = c(0.1, 0.35, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)) +\n    scale_color_viridis_d(aesthetics = \"fill\", option = \"C\") +\n    coord_cartesian(xlim = c(-4.8, 12.8), expand = F) +\n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"Difference smooths\\nParoxytone - Oxytone\", x = \"Time course\") + \n    theme(strip.background = element_blank(), strip.text = element_blank())\n\ngamm_bi_p1 / gamm_bi_p2\n```\n\n::: {.cell-output-display}\n![Probability of fixating on target as a function of stress for the bilingual groups. The time course is centered around the target syllable offset (point 0). Vertical lines represent 200ms after target syllable offset. Lines represent paroxytone ('CANta', green) and oxytone ('canTO', orange) conditions plus 95%, 80%, and 50% credible intervals. Pairwise difference smooths for paroxytone and oxytone items. From dark to light, colors represent 95%, 80%, 70%, 60%, 50%, 35% and 10% credible intervals.](05_gamms_files/figure-html/bi-comparison-plot-1.png){width=100%}\n:::\n:::\n\n## Use and proficiency\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create subset of data at target syllable offset (time_zero == 4)\n# and calculate mean/se of target fixations for each group in each \n# stress condition\nbi_4_prop <- bi_50_gamm %>% \n  filter(time_zero == 4) %>% \n  group_by(id, group, stress, use_z, prof_z) %>% \n  summarize(avg = mean(target_prop), se = std_err(target_prop), \n    test_max = avg + se, .groups = \"drop\") %>% \n  mutate(group_sum = if_else(group == \"HL\", -1, 1), \n    stress_sum = if_else(stress == \"Paroxytone\", -1, 1))\n\n# Model formula\nbeta_reg_formula <- bf(\n  family = zero_inflated_beta(\n    link = \"logit\", \n    link_phi = \"log\", \n    link_zi = \"logit\"), \n  avg ~ 1 + \n    group_sum * stress_sum * use_z * prof_z + \n    (1 + stress_sum | id), \n  phi ~ 1 + (1 | id), \n  zi ~ 1 + (1 | id)\n)\n\n# Get model default priors\nget_prior(\n  formula = beta_reg_formula, \n  data = bi_4_prop\n  ) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                              \n---------------------  ----------  ----------------------------------\n                       b                                             \n                       b           group_sum                         \n                       b           group_sum:prof_z                  \n                       b           group_sum:stress_sum              \n                       b           group_sum:stress_sum:prof_z       \n                       b           group_sum:stress_sum:use_z        \n                       b           group_sum:stress_sum:use_z:prof_z \n                       b           group_sum:use_z                   \n                       b           group_sum:use_z:prof_z            \n                       b           prof_z                            \n                       b           stress_sum                        \n                       b           stress_sum:prof_z                 \n                       b           stress_sum:use_z                  \n                       b           stress_sum:use_z:prof_z           \n                       b           use_z                             \n                       b           use_z:prof_z                      \nlkj(1)                 cor                                           \n                       cor                                           \nstudent_t(3, 0, 2.5)   Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept                         \n                       sd          stress_sum                        \nstudent_t(3, 0, 2.5)   Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept                         \nlogistic(0, 1)         Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept\n:::\n\n```{.r .cell-code}\n# Set priors\nbeta_reg_prior <- c(\n  prior(normal(0, 0.5), class = \"Intercept\"), \n  prior(normal(0, 0.5), class = \"Intercept\", dpar = \"phi\"), \n  prior(logistic(0, 1), class = \"Intercept\", dpar = \"zi\"), \n  prior(normal(0, 0.2), class = \"b\"), \n  prior(student_t(3, 0, 2.5), class = \"sd\"), \n  prior(lkj(1), class = \"cor\")\n)\n\n# Sample priors\nbeta_reg_prior_predictive_check <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", \n  sample_prior = \"only\", \n  file = here(\"models\", \"beta_reg\", \"beta_reg_prior_predictive_check\")\n)\n\n# Simulate from priors and plot\nprior_pred_heatmap <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum, \n    prof_z = -2:2, use_z = -2:2) %>%\n  add_epred_draws(beta_reg_prior_predictive_check, \n    allow_new_levels = T, ndraws = 100) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(stress_sum ~ group_sum) + \n    geom_tile() + \n    scale_fill_viridis_c() + \n    coord_cartesian(expand = F)\n\n# Fit model\nbeta_reg_group_stress <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", threads = threading(2), \n  iter = 12000, warmup = 2000, thin = 10, \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  file = here(\"models\", \"beta_reg\", \"beta_reg_group_stress\")\n)\n```\n:::\n\n\n::: {.cell hash='05_gamms_cache/html/bi-prof-use-plot_cc8d29cf21ec4c65414604d06187dee3'}\n\n```{.r .cell-code}\n# plot\nbeta_reg_use <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = \"P(Target fixation)\", x = \"z-Use\")\n\nbeta_reg_prof <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05) + \n    stat_summary(fun = median, geom = \"line\", size = 2) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    scale_y_continuous(position = \"right\") + \n    labs(y = NULL, x = \"z-Proficiency\") + \n    theme(legend.position = c(0.85, 0.85))\n\nbeta_reg_use + beta_reg_prof\n```\n\n::: {.cell-output-display}\n![Probability of target fixations 200ms after critical syllable offset for bilingual groups. The left panel plots target fixations as a function of normalized *use* scores while holding proficiency constant at the mean (0) and marginalizing over stress. The right panel plots target fixations as a function of normalized *proficiency* scores while holding use constant at the mean (0) and marginalizing over stress. Individual lines represent 200 draws from the posterior. The thick lines are the most plausible lines of best fit.](05_gamms_files/figure-html/bi-prof-use-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/bi-prof-use-heatmap_b0fc2b3e93b57498bba0369700913f20'}\n\n```{.r .cell-code}\n# plot\nbi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = seq(-2, 2, length.out = 20),\n    use_z = seq(-2, 2, length.out = 20)) %>% \n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200\n    ) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = if_else(stress_sum == -1, \"Paroxytone\", \"Oxytone\")) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(. ~ group) + \n    geom_tile() + \n    scale_fill_viridis_c(name = NULL, option = \"B\") + \n    coord_cartesian(expand = F) + \n    labs(y = \"z-Use\", x = \"z-Proficiency\")\n```\n\n::: {.cell-output-display}\n![Heatmap of target fixations 200ms after target syllable offset. The heatmap illustrates the conditional effects of normalized proficiency and use scores marginalizing over lexical stress for the bilingual groups.](05_gamms_files/figure-html/bi-prof-use-heatmap-1.png){width=100%}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}