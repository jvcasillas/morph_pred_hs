{
  "hash": "90f7d96cba5922407f92066615655230",
  "result": {
    "markdown": "---\ntitle: \"{{< var title >}}: {{< var version >}}\"\nsubtitle: \"Beta regression\"\nauthor: \"{{< var author.name >}}\"\ndate: \"2022-10-11\"\nformat: html\nexecute: \n  fig.retina: 2\n---\n\n\n# Setup\n\n## Load libraries, helpers, and data\n\nLoad everything we need for the analyses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries and helpers\nsource(here::here(\"scripts\", \"00_libraries.R\"))\nsource(here::here(\"scripts\", \"01_helpers.R\"))\nsource(here::here(\"scripts\", \"04_load_data.R\"))\n```\n:::\n\n\n# Bilingual model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create subset of data at target syllable offset (time_zero == 4)\n# and calculate mean/se of target fixations for each group in each \n# stress condition\nbi_4_prop <- stress_50 %>% \n  filter(group != \"Monolingual\", \n    time_zero == 4) %>% \n  group_by(id, group, stress, use_z, prof_z) %>% \n  summarize(avg = mean(target_prop), se = std_err(target_prop), \n    test_max = avg + se, .groups = \"drop\") %>% \n  mutate(group_sum = if_else(group == \"HL\", -1, 1), \n    stress_sum = if_else(stress == \"Paroxytone\", -1, 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model formula\nbeta_reg_formula <- bf(\n  family = zero_inflated_beta(\n    link = \"logit\", \n    link_phi = \"log\", \n    link_zi = \"logit\"\n    ), \n  avg ~ 1 + \n    group_sum + stress_sum + use_z + prof_z + \n    group_sum:stress_sum + \n    group_sum:use_z + group_sum:prof_z + \n    group_sum:use_z:prof_z + \n    (1 + stress_sum | id), \n  phi ~ 1 + (1 + stress_sum | id), \n  zi ~ 1 + (1 + stress_sum| id)\n)\n\n# Get model default priors\nget_prior(\n  formula = beta_reg_formula, \n  data = bi_4_prop\n  ) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                   \n---------------------  ----------  -----------------------\n                       b                                  \n                       b           group_sum              \n                       b           group_sum:prof_z       \n                       b           group_sum:stress_sum   \n                       b           group_sum:use_z        \n                       b           group_sum:use_z:prof_z \n                       b           prof_z                 \n                       b           stress_sum             \n                       b           use_z                  \nlkj(1)                 cor                                \n                       cor                                \nstudent_t(3, 0, 2.5)   Intercept                          \nstudent_t(3, 0, 2.5)   sd                                 \n                       sd                                 \n                       sd          Intercept              \n                       sd          stress_sum             \nstudent_t(3, 0, 2.5)   Intercept                          \nstudent_t(3, 0, 2.5)   sd                                 \n                       sd                                 \n                       sd          Intercept              \n                       sd          stress_sum             \nlogistic(0, 1)         Intercept                          \nstudent_t(3, 0, 2.5)   sd                                 \n                       sd                                 \n                       sd          Intercept              \n                       sd          stress_sum\n:::\n\n```{.r .cell-code}\n# Set priors\nbeta_reg_prior <- c(\n  prior(normal(0, 0.5), class = \"Intercept\"), \n  prior(normal(0, 0.5), class = \"Intercept\", dpar = \"phi\"), \n  prior(logistic(0, 1), class = \"Intercept\", dpar = \"zi\"), \n  prior(normal(0, 0.2), class = \"b\"), \n  prior(student_t(3, 0, 2.5), class = \"sd\"), \n  prior(lkj(1), class = \"cor\")\n)\n\n# Sample priors\nbeta_reg_prior_predictive_check <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", \n  sample_prior = \"only\", \n  file = here(\"models\", \"beta_reg\", \"beta_reg_prior_predictive_check\")\n)\n\n# Simulate from priors and plot\nprior_pred_heatmap <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum, \n    prof_z = -2:2, use_z = -2:2) %>%\n  add_epred_draws(beta_reg_prior_predictive_check, \n    allow_new_levels = T, ndraws = 100) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(stress_sum ~ group_sum) + \n    geom_tile() + \n    scale_fill_viridis_c() + \n    coord_cartesian(expand = F)\n\n# Fit model\nbeta_reg_group_stress <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", threads = threading(2), \n  iter = 12000, warmup = 2000, thin = 10, \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  file = here(\"models\", \"beta_reg\", \"beta_reg_group_stress\")\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbi_zoid_marignal_prep <- bi_4_prop %>% \n  expand(id = \"new\", group_sum = c(-1, 1), stress_sum = c(-1, 1), \n    prof_z = 0, use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n         stress = if_else(stress_sum == -1, \"Paroxytone\", \"Oxytone\")) %>% \n  ungroup()\n\nif(F) {\nbi_zoid_marignal_prep %>% \n  group_by(group, stress) %>% \n  median_qi(.epred) %>% \n  mutate_if(is.numeric, round, digit = 2) %>% \n  transmute(\n    Estimate = .epred, HDI = glue::glue(\"[{.lower}, {.upper}]\"), \n    parameter = glue::glue(\"{group}_{stress}\")) %>% \n  write_csv(here(\"tables\", \"tab_bi_zoid_marginals.csv\")) \n}\n\nbi_zoid_marignal_prep %>% \n  ggplot() + \n  aes(x = .epred, y = group, fill = stress) + \n  geom_point(data = filter(bi_4_prop, stress == \"Paroxytone\"), aes(x = avg), \n    pch = 21, color = \"white\", position = position_nudge(y = -0.15), \n    alpha = 0.2) +\n  geom_point(data = filter(bi_4_prop, stress == \"Oxytone\"), aes(x = avg), \n    pch = 21, color = \"white\", position = position_nudge(y = -0.20), \n    alpha = 0.2) +\n  stat_halfeye(position = position_dodge(0.2), pch = 21, \n    slab_alpha = 0.4, slab_color = \"white\", show.legend = F) + \n  scale_fill_manual(name = NULL, values = my_colors[c(1, 2)]) + \n  labs(y = NULL, x = \"P(Target fixation)\") + \n  guides(fill = guide_legend(override.aes = list(alpha = 1, size = 3))) +\n  theme(legend.position = c(0.1, 0.9))\n```\n\n::: {.cell-output-display}\n![Probability of target fixations 200ms after critical syllable offset for bilingual groups marginalizing over use and proficiency. Solid points represent posterior means along with 66% and 95% credible intervals. Transparent points are by-participant means.](../figs/bi-beta-reg-stress-group-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='06_beta_reg_cache/html/bi-prof-use-plot_4bd8ceb8a7c6f59724369a2467bd2198'}\n\n```{.r .cell-code}\n# plot\nbeta_reg_use_parox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = -1, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05) + \n    stat_summary(fun = median, geom = \"line\", size = 2) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = \"P(Target fixation)\", x = NULL) + \n    theme(legend.position = c(0.15, 0.85), \n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_prof_parox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = -1, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Paroxytone\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(axis.ticks.y = element_blank(), axis.text.y = element_blank(),\n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_use_avg <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_prof_avg <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Avg. stress\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(legend.position = c(0.85, 0.85), \n      axis.ticks.y = element_blank(), axis.text.y = element_blank(), \n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_use_ox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 1, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = \"z-Use\")\n\nbeta_reg_prof_ox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 1, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Oxytone\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    scale_y_continuous(position = \"right\") + \n    labs(y = NULL, x = \"z-Proficiency\") + \n    theme(legend.position = c(0.85, 0.85), \n      axis.ticks.y = element_blank(), axis.text.y = element_blank())\n\n(beta_reg_use_parox + beta_reg_prof_parox) /\n(beta_reg_use_avg + beta_reg_prof_avg) /\n(beta_reg_use_ox + beta_reg_prof_ox)\n```\n\n::: {.cell-output-display}\n![Probability of target fixations 200ms after critical syllable offset for bilingual groups. The left panel plots target fixations as a function of normalized *use* scores while holding proficiency constant at the mean (0) and marginalizing over stress. The right panel plots target fixations as a function of normalized *proficiency* scores while holding use constant at the mean (0) and marginalizing over stress. Individual lines represent 200 draws from the posterior. The thick lines are the most plausible lines of best fit.](../figs/bi-prof-use-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='06_beta_reg_cache/html/bi-prof-use-heatmap_c58f8f0b4d3d47a224ace3d84c34e982'}\n\n```{.r .cell-code}\nif(F) {\n# plot\nbi_heat_map <- bi_4_prop %>% \n  expand(id = \"new\", \n    group_sum = c(-1, 0, 1), \n    stress_sum = c(-1, 0, 1), \n    prof_z = seq(-2, 2, length.out = 20),\n    use_z = seq(-2, 2, length.out = 20)) %>% \n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NA, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 100\n    ) %>% \n  write_csv(here(\"models\", \"beta_reg\", \"beta_reg_group_stress_post.csv\"))\n}\n\nbi_heat_map <- \n  read_csv(here(\"models\", \"beta_reg\", \"beta_reg_group_stress_post.csv\"))\n\nbi_heat_map %>% \n  mutate(\n    group = case_when(\n      group_sum == -1 ~ \"HL\", \n      group_sum == 0 ~ \"Avg. group\", \n      TRUE ~ \"L2\"), \n    stress = case_when(\n      stress_sum == -1 ~ \"Paroxytone\", \n      stress_sum ==  0 ~ \"Avg. stress\", \n      TRUE ~ \"Oxytone\"\n      ), \n    stress = as.factor(stress), \n    stress = fct_relevel(stress, \"Paroxytone\", \"Avg. stress\"), \n    group = as.factor(group), \n    group = fct_relevel(group, \"HL\", \"Avg. group\")) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(stress ~ group) + \n    geom_tile() + \n    scale_fill_viridis_c(name = NULL, option = \"B\") + \n    coord_cartesian(expand = F) + \n    labs(y = \"z-Use\", x = \"z-Proficiency\") + \n    clean_guide(\"bottom\", \"P(Target fixation)\")\n```\n\n::: {.cell-output-display}\n![Heatmap of target fixations 200ms after target syllable offset. The heatmap illustrates the conditional effects of normalized proficiency and use scores for the bilingual groups. The top rows illustrate model estimate for the paroxytone condtion, the middle rows marginalize over stress conditions, and the bottom rows represent model estimate for the oxytone condition.](../figs/bi-prof-use-heatmap-1.png){width=100%}\n:::\n:::\n\n\n\n\n# Tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get posterior and cleanup colnames and term names\nbeta_reg_tab_dat <- as_draws_df(beta_reg_group_stress) %>% \n  select(starts_with(c(\"b_\", \"sd_\", \"cor_id\"))) %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(type = case_when(\n      startsWith(name, \"b_\") ~ \"Population-level\", \n      startsWith(name, \"sd_\") ~ \"Group-level\", \n      startsWith(name, \"cor_\") ~ \"Group-level\"), \n    type = fct_relevel(type, \"Population-level\", \"Group-level\")) %>% \n  mutate(name = case_when(\n      name == \"b_Intercept\" ~ \"Intercept\", \n      name == \"b_phi_Intercept\" ~ \"phi Intercept\",\n      name == \"b_zi_Intercept\" ~ \"zi Intercept\",\n      name == \"b_group_sum\" ~ \"Group\", \n      name == \"b_stress_sum\" ~ \"Stress\", \n      name == \"b_prof_z\" ~ \"Proficiency\", \n      name == \"b_use_z\" ~ \"Use\", \n      name == \"b_group_sum:stress_sum\" ~ \"Group:Stress\", \n      name == \"b_group_sum:use_z\" ~ \"Group:Use\", \n      name == \"b_group_sum:prof_z\" ~ \"Group:Proficiency\", \n      name == \"b_group_sum:use_z:prof_z\" ~ \"Group:Use:Proficiency\", \n      name == \"sd_id__Intercept\" ~ \"sd(Intercept)\", \n      name == \"sd_id__stress_sum\" ~ \"sd(Stress)\", \n      name == \"sd_id__phi_Intercept\" ~ \"sd(phi Intercept)\", \n      name == \"sd_id__phi_stress_sum\" ~ \"sd(phi Stress)\", \n      name == \"sd_id__zi_Intercept\" ~ \"sd(zi Intercept)\", \n      name == \"sd_id__zi_stress_sum\" ~ \"sd(zi Stress)\", \n      name == \"cor_id__Intercept__stress_sum\" ~ \"cor(Intercept, Stress)\", \n      name == \"cor_id__phi_Intercept__phi_stress_sum\" ~ \"cor(phi Intercept, phi Stress)\",\n      name == \"cor_id__zi_Intercept__zi_stress_sum\" ~ \"cor(zi Intercept, zi Stress)\", \n      TRUE ~ name)\n  ) %>% \n  mutate(name = fct_relevel(name, \n    \"cor(zi Intercept, zi Stress)\", \"cor(phi Intercept, phi Stress)\", \n    \"cor(Intercept, Stress)\", \"sd(zi Stress)\", \"sd(zi Intercept)\", \n    \"sd(phi Stress)\", \"sd(phi Intercept)\", \"sd(Stress)\", \"sd(Intercept)\", \n    \"Group:Use:Proficiency\", \"Group:Proficiency\", \"Group:Use\", \"Group:Stress\", \n    \"Use\", \"Proficiency\", \"Stress\", \"Group\", \"zi Intercept\", \n    \"phi Intercept\", \"Intercept\"))\n\n# Summarize posterior for printing estimates in plot\nbeta_reg_summary <- group_by(beta_reg_tab_dat, name, type) %>% \n  mean_qi(value, .width = 0.95) %>% \n  mutate_if(is.numeric, specify_decimal, k = 2) %>% \n  mutate(label = glue::glue(\"{value} [{.lower}, {.upper}]\"), \n         label = str_replace_all(label, \"-\", \"\\U2212\")) \n\n# Forest plot\nbeta_reg_tab_dat %>% \n  ggplot(., aes(x = value, y = name)) + \n    facet_grid(type ~ ., scales = \"free\", space = \"free\") + \n    geom_vline(xintercept = 0, lty = 3) + \n    stat_pointinterval(point_fill = \"white\",  pch = 21, show.legend = F) +\n    geom_text(data = beta_reg_summary, \n      hjust = 1, family = \"Times\", size = 3.2, \n      aes(group = type, label = label, x = -1.05)) +\n    coord_cartesian(xlim = c(-1.9, 2.5)) + \n    scale_x_continuous(breaks = c(-2, -1, 0, 1, 2)) + \n    labs(y = NULL, x = \"Estimate\") + \n    theme(plot.margin = unit(x = c(0, 0, 0, 0), units = \"mm\"), \n      strip.placement = \"outside\", strip.background = element_blank(), \n      axis.text.y = element_text(hjust = 1), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](../figs/forest-plot-beta-reg-1.png){width=672}\n:::\n:::\n\n::: {#tbl-beta-reg .cell tbl-cap='Bilingual ZOID summary.'}\n\n```{.r .cell-code}\nbi_zoid_tib <- beta_reg_tab_dat %>% \n  group_by(type, name) %>% \n  mutate(name = fct_rev(name)) %>% \n  summarize(.groups = \"drop\", \n    hdi = mean_qi(value), \n    rope = rope(value, range = c(-0.1, 0.1)), \n    PD = pd(value, null = 0)[1]) %>% \n  transmute(Effect = type, Term = name, Estimate = hdi$y, \n    lower = hdi$ymin, upper = hdi$ymax, ROPE = rope$ROPE_Percentage, PD) %>% \n  mutate_if(is.numeric, specify_decimal, k = 2) %>% \n  transmute(Effect, Term, Estimate, \n    HDI = glue::glue(\"[{lower}, {upper}]\"), ROPE, PD, \n    parameter = Term) %>% \n  mutate(\n    Estimate = str_replace_all(Estimate, \"-\", \"\\U2212\"), \n    HDI = str_replace_all(HDI, \"-\", \"\\U2212\") \n  ) %>% \n  write_csv(here(\"tables\", \"tab_bi_zoid_mod.csv\"))\n\nbi_zoid_tib %>% \n  select(-parameter) %>% \n  knitr::kable(format = \"pandoc\", \n    align = c(\"l\", \"l\", \"r\", \"r\", \"r\", \"r\", \"r\"))\n```\n\n::: {.cell-output-display}\nEffect             Term                              Estimate              HDI   ROPE     PD\n-----------------  -------------------------------  ---------  ---------------  -----  -----\nPopulation-level   Intercept                             0.11     [0.01, 0.22]   0.39   0.99\nPopulation-level   phi Intercept                         2.12     [1.81, 2.47]   0.00   1.00\nPopulation-level   zi Intercept                         −4.80   [−7.33, −3.36]   0.00   1.00\nPopulation-level   Group                                −0.05    [−0.16, 0.05]   0.83   0.83\nPopulation-level   Stress                               −0.02    [−0.12, 0.08]   0.97   0.63\nPopulation-level   Proficiency                           0.07    [−0.05, 0.19]   0.69   0.87\nPopulation-level   Use                                   0.02    [−0.09, 0.12]   0.96   0.63\nPopulation-level   Group:Stress                          0.17     [0.06, 0.27]   0.08   1.00\nPopulation-level   Group:Use                            −0.13   [−0.23, −0.02]   0.30   0.99\nPopulation-level   Group:Proficiency                    −0.03    [−0.15, 0.10]   0.91   0.66\nPopulation-level   Group:Use:Proficiency                −0.03    [−0.15, 0.09]   0.88   0.67\nGroup-level        sd(Intercept)                         0.13     [0.01, 0.32]   0.42   1.00\nGroup-level        sd(Stress)                            0.12     [0.01, 0.31]   0.45   1.00\nGroup-level        sd(phi Intercept)                     0.64     [0.22, 1.05]   0.00   1.00\nGroup-level        sd(phi Stress)                        0.33     [0.02, 0.74]   0.13   1.00\nGroup-level        sd(zi Intercept)                      0.80     [0.03, 2.46]   0.06   1.00\nGroup-level        sd(zi Stress)                         0.83     [0.03, 2.55]   0.05   1.00\nGroup-level        cor(Intercept, Stress)               −0.19    [−0.97, 0.91]   0.09   0.65\nGroup-level        cor(phi Intercept, phi Stress)        0.41    [−0.63, 0.97]   0.09   0.82\nGroup-level        cor(zi Intercept, zi Stress)          0.11    [−0.90, 0.95]   0.12   0.59\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}