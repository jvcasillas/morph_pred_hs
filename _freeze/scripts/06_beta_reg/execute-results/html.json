{
  "hash": "0b4ce2c2cd7b17919f4a3709740a401a",
  "result": {
    "markdown": "---\ntitle: \"{{< var title >}}: {{< var version >}}\"\nsubtitle: \"Beta regression\"\nauthor: \"{{< var author.name >}}\"\ndate: \"2022-10-03\"\nformat: html\n---\n\n\n# Setup\n\n## Load libraries, helpers, and data\n\nLoad everything we need for the analyses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries and helpers\nsource(here::here(\"scripts\", \"00_libraries.R\"))\nsource(here::here(\"scripts\", \"01_helpers.R\"))\nsource(here::here(\"scripts\", \"04_load_data.R\"))\n```\n:::\n\n\n# Bilingual model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create subset of data at target syllable offset (time_zero == 4)\n# and calculate mean/se of target fixations for each group in each \n# stress condition\nbi_4_prop <- stress_50 %>% \n  filter(group != \"Monolingual\", \n    time_zero == 4) %>% \n  group_by(id, group, stress, use_z, prof_z) %>% \n  summarize(avg = mean(target_prop), se = std_err(target_prop), \n    test_max = avg + se, .groups = \"drop\") %>% \n  mutate(group_sum = if_else(group == \"HL\", -1, 1), \n    stress_sum = if_else(stress == \"Paroxytone\", -1, 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model formula\nbeta_reg_formula <- bf(\n  family = zero_inflated_beta(\n    link = \"logit\", \n    link_phi = \"log\", \n    link_zi = \"logit\"), \n  avg ~ 1 + \n    group_sum * stress_sum * use_z * prof_z + \n    (1 + stress_sum | id), \n  phi ~ 1 + (1 | id), \n  zi ~ 1 + (1 | id)\n)\n\n# Get model default priors\nget_prior(\n  formula = beta_reg_formula, \n  data = bi_4_prop\n  ) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                              \n---------------------  ----------  ----------------------------------\n                       b                                             \n                       b           group_sum                         \n                       b           group_sum:prof_z                  \n                       b           group_sum:stress_sum              \n                       b           group_sum:stress_sum:prof_z       \n                       b           group_sum:stress_sum:use_z        \n                       b           group_sum:stress_sum:use_z:prof_z \n                       b           group_sum:use_z                   \n                       b           group_sum:use_z:prof_z            \n                       b           prof_z                            \n                       b           stress_sum                        \n                       b           stress_sum:prof_z                 \n                       b           stress_sum:use_z                  \n                       b           stress_sum:use_z:prof_z           \n                       b           use_z                             \n                       b           use_z:prof_z                      \nlkj(1)                 cor                                           \n                       cor                                           \nstudent_t(3, 0, 2.5)   Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept                         \n                       sd          stress_sum                        \nstudent_t(3, 0, 2.5)   Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept                         \nlogistic(0, 1)         Intercept                                     \nstudent_t(3, 0, 2.5)   sd                                            \n                       sd                                            \n                       sd          Intercept\n:::\n\n```{.r .cell-code}\n# Set priors\nbeta_reg_prior <- c(\n  prior(normal(0, 0.5), class = \"Intercept\"), \n  prior(normal(0, 0.5), class = \"Intercept\", dpar = \"phi\"), \n  prior(logistic(0, 1), class = \"Intercept\", dpar = \"zi\"), \n  prior(normal(0, 0.2), class = \"b\"), \n  prior(student_t(3, 0, 2.5), class = \"sd\"), \n  prior(lkj(1), class = \"cor\")\n)\n\n# Sample priors\nbeta_reg_prior_predictive_check <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", \n  sample_prior = \"only\", \n  file = here(\"models\", \"beta_reg\", \"beta_reg_prior_predictive_check\")\n)\n\n# Simulate from priors and plot\nprior_pred_heatmap <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum, \n    prof_z = -2:2, use_z = -2:2) %>%\n  add_epred_draws(beta_reg_prior_predictive_check, \n    allow_new_levels = T, ndraws = 100) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(stress_sum ~ group_sum) + \n    geom_tile() + \n    scale_fill_viridis_c() + \n    coord_cartesian(expand = F)\n\n# Fit model\nbeta_reg_group_stress <- brm(\n  formula = beta_reg_formula, \n  prior = beta_reg_prior, \n  data = bi_4_prop, \n  cores = 4, backend = \"cmdstanr\", threads = threading(2), \n  iter = 12000, warmup = 2000, thin = 10, \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  file = here(\"models\", \"beta_reg\", \"beta_reg_group_stress\")\n)\n```\n:::\n\n::: {.cell hash='06_beta_reg_cache/html/bi-prof-use-plot_4bd8ceb8a7c6f59724369a2467bd2198'}\n\n```{.r .cell-code}\n# plot\nbeta_reg_use_parox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = -1, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05) + \n    stat_summary(fun = median, geom = \"line\", size = 2) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = \"P(Target fixation)\", x = NULL) + \n    theme(legend.position = c(0.15, 0.85), \n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_prof_parox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = -1, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Paroxytone\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(axis.ticks.y = element_blank(), axis.text.y = element_blank(),\n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_use_avg <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_prof_avg <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 0, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Avg. stress\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = NULL) + \n    theme(legend.position = c(0.85, 0.85), \n      axis.ticks.y = element_blank(), axis.text.y = element_blank(), \n      axis.ticks.x = element_blank(), axis.text.x = element_blank())\n\nbeta_reg_use_ox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 1, \n    prof_z = 0, use_z = seq(-2.1, 2.1, length.out = 5)) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\")) %>% \n  ggplot() + \n    aes(x = use_z, y = .epred, color = group) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    labs(y = NULL, x = \"z-Use\")\n\nbeta_reg_prof_ox <- bi_4_prop %>% \n  expand(id = \"new\", group_sum, stress_sum = 1, \n    prof_z = seq(-2.1, 2.1, length.out = 5), use_z = 0) %>%\n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200) %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = \"Oxytone\") %>% \n  ggplot() + \n    aes(x = prof_z, y = .epred, color = group) + \n    facet_grid(stress ~ .) + \n    geom_path(aes(group = interaction(group, .draw)), alpha = 0.05, \n      show.legend = F) + \n    stat_summary(fun = median, geom = \"line\", size = 2, show.legend = F) + \n    scale_color_manual(name = NULL, values = my_colors[3:2]) + \n    coord_cartesian(ylim = c(-0.05, 1.05), xlim = c(-2.1, 2.1), \n      expand = F) + \n    scale_y_continuous(position = \"right\") + \n    labs(y = NULL, x = \"z-Proficiency\") + \n    theme(legend.position = c(0.85, 0.85), \n      axis.ticks.y = element_blank(), axis.text.y = element_blank())\n\n(beta_reg_use_parox + beta_reg_prof_parox) /\n(beta_reg_use_avg + beta_reg_prof_avg) /\n(beta_reg_use_ox + beta_reg_prof_ox)\n```\n\n::: {.cell-output-display}\n![Probability of target fixations 200ms after critical syllable offset for bilingual groups. The left panel plots target fixations as a function of normalized *use* scores while holding proficiency constant at the mean (0) and marginalizing over stress. The right panel plots target fixations as a function of normalized *proficiency* scores while holding use constant at the mean (0) and marginalizing over stress. Individual lines represent 200 draws from the posterior. The thick lines are the most plausible lines of best fit.](../figs/bi-prof-use-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='06_beta_reg_cache/html/bi-prof-use-heatmap_1c5ab766058ba52ac53260fbcb7b5dbc'}\n\n```{.r .cell-code}\n# plot\nbi_heat_map <- bi_4_prop %>% \n  expand(id = \"new\", \n    group_sum, \n    stress_sum = c(-1, 0, 1), \n    prof_z = seq(-2, 2, length.out = 20),\n    use_z = seq(-2, 2, length.out = 20)) %>% \n  add_epred_draws(beta_reg_group_stress, \n    allow_new_levels = T, \n    re_formula = NULL, \n    sample_new_levels = \"uncertainty\", \n    ndraws = 200\n    ) \n\nbi_heat_map %>% \n  mutate(group = if_else(group_sum == -1, \"HL\", \"L2\"), \n    stress = case_when(\n      stress_sum == -1 ~ \"Paroxytone\", \n      stress_sum ==  0 ~ \"Avg. stress\", \n      TRUE ~ \"Oxytone\"\n      ), \n    stress = as.factor(stress), \n    stress = fct_relevel(stress, \"Paroxytone\", \"Avg. stress\")) %>% \n  ggplot() + \n    aes(x = prof_z, y = use_z, fill = .epred) + \n    facet_grid(stress ~ group) + \n    geom_tile() + \n    scale_fill_viridis_c(name = NULL, option = \"B\") + \n    coord_cartesian(expand = F) + \n    labs(y = \"z-Use\", x = \"z-Proficiency\") + \n    clean_guide(\"bottom\", \"P(Target fixation)\")\n```\n\n::: {.cell-output-display}\n![Heatmap of target fixations 200ms after target syllable offset. The heatmap illustrates the conditional effects of normalized proficiency and use scores for the bilingual groups. The top rows illustrate model estimate for the paroxytone condtion, the middle rows marginalize over stress conditions, and the bottom rows represent model estimate for the oxytone condition.](../figs/bi-prof-use-heatmap-1.png){width=100%}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}