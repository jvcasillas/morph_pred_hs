{
  "hash": "5510f0380c0eb0a3eb0f9217c64e4b0a",
  "result": {
    "markdown": "---\ntitle: \"{{< var title >}}: {{< var version >}}\"\nsubtitle: \"GAMMs\"\nauthor: \"{{< var author.name >}}\"\ndate: \"2022-10-10\"\nformat: \n  html: default\n  pdf: default\nexecute: \n  fig.retina: 2\n---\n\n\n# Setup\n\n## Load libraries, helpers, and data\n\nLoad everything we need for the analyses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries and helpers\nsource(here::here(\"scripts\", \"00_libraries.R\"))\nsource(here::here(\"scripts\", \"01_helpers.R\"))\nsource(here::here(\"scripts\", \"04_load_data.R\"))\n```\n:::\n\n\n## Practice model\n\nFirst, we'll fit a model to the data of one participant to check and make sure everything is working ok. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Take subset of 1 participant\nmon01 <- stress_50 %>% \n  filter(id == \"mon01\", \n    time_zero > -10, time_zero < 20)\n\n# Set model formula\nformula <- bf(\n  target_count | trials(50) ~ 1 + stress + \n    s(time_zero, bs = \"cr\", k = 3) + \n    s(time_zero, by = stress, bs = \"cr\", k = 3) \n)\n\n# Get priors\nget_prior(\n  formula = formula, \n  family = binomial(link = \"logit\"), \n  data = mon01\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                        \n---------------------  ----------  --------------------------------------------\n                       b                                                       \n                       b           stime_zero_1                                \n                       b           stime_zero:stressOxytone_1                  \n                       b           stime_zero:stressParoxytone_1               \n                       b           stressParoxytone                            \nstudent_t(3, 0, 2.5)   Intercept                                               \nstudent_t(3, 0, 2.5)   sds                                                     \n                       sds         s(time_zero, bs = \"cr\", k = 3)              \n                       sds         s(time_zero, by = stress, bs = \"cr\", k = 3)\n:::\n\n```{.r .cell-code}\n# Set priors\nlog_spline_priors <- c(\n  prior(normal(0, 3), class = Intercept), \n  prior(normal(0, 10), class = b), \n  prior(student_t(3, 0, 1), class = sds)\n)\n\n# Fit test mod\ntest_mod <- brm(\n  formula = formula, \n  family = binomial(link = \"logit\"), \n  prior = log_spline_priors, \n  iter = 2000, warmup = 1000, cores = 4, \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.99, max_treedepth = 15), \n  data = mon01, \n  file = here(\"models\", \"gamms\", \"test_mod\")\n)\n```\n:::\n\n\n## Test plots of time course and marginal predicted estimates\n\nWe can use the posterior to take a look at the model fit. \n\n\n::: {.cell hash='05_gamms_cache/html/practice-plot-1_bdc8368a0ef8881abec8ef6e753edcdd'}\n\n```{.r .cell-code}\n# Plot time course\ntest_mod %>% \n  emmeans(spec = ~ 1 + time_zero + stress, \n    at = list(time_zero = seq(-5.5, 11.5, 1)), \n    epred = T) %>% \n  gather_emmeans_draws() %>% \n  ggplot(., aes(x = time_zero, y = .value / 50, color = stress)) + \n    geom_hline(yintercept = 0.5, lty = 3) + \n    stat_lineribbon(size = 0.5) + \n    scale_color_brewer(name = NULL, palette = \"Dark2\", \n      labels = c(\"Paroxytone\\n(CANta)\", \"Oxytone\\n(canTO)\")) + \n    scale_fill_brewer(name = NULL, palette = \"Greys\", \n      labels = c(\"95%\", \"80%\", \"50%\")) + \n    labs(y = \"P(Target fixation)\", x = \"Time course\") + \n    coord_cartesian(xlim = c(-5.4, 11.4), ylim = c(-0.01, 1.02), \n      expand = F) + \n    clean_guide(position = c(0.8, 0.22), \n      title = \"Estimated prediction intervals\")\n```\n\n::: {.cell-output-display}\n![Target fixation as a function of stress for 1 participant.](../figs/practice-plot-1-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/practice-plot-2_c3ee7a3d9919da515e96cf7fad6ea74b'}\n\n```{.r .cell-code}\n# Test at time 0\ntest_mod %>% \n  emmeans(\n  spec = ~ 1 + time_zero + stress, \n  at = list(time_zero = 0), \n  epred = TRUE\n  ) %>% \n  gather_emmeans_draws() %>% \n  mutate(prop = .value / 50) %>% \n  ggplot(., aes(x = prop, y = stress)) + \n    geom_rect(data = tibble(xmin = 0.49, xmax = 0.51), \n      inherit.aes = F, fill = \"lightblue\", color = \"white\", alpha = 0.2,\n      aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf)) +\n    geom_vline(xintercept = 0.5, lty = 3, size = 0.5) + \n    stat_dotsinterval(quantiles = 100) + \n    geom_text(aes(label = label), hjust = 0, \n      data = tibble(stress = 0.5, prop = 0.51, \n        label = \"200ms after 1st syllable offset\")) +\n    labs(y = NULL, x = \"P(Target fixation)\") + \n    coord_cartesian(xlim = c(0.48, 0.68))\n```\n\n::: {.cell-output-display}\n![Proportion of target fixations 200ms after offset of 1st syllable. Data from one participant.](../figs/practice-plot-2-1.png){width=100%}\n:::\n:::\n\n\n# Omnibus stress model\n\n\n\n\n\n### Logistic GAMM\n\nNow we set up the data set for the main model. \nMain concerns are (1) getting the factors ready for smoothing terms and (2) subsetting the time course to reduce computational load. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set model formula\nformula_log_gamm_stress <- bf(\n  target_count | trials(50) ~ 1 + group * stress + \n    s(time_zero, bs = \"cr\") + \n    s(time_zero, by = stress, bs = \"cr\") +\n    #s(time_zero, id, bs = \"fs\", m = 1, k = 3) + \n    #s(time_zero, target, bs = \"fs\", m = 1, k = 3)\n    (1 | id)\n)\n\n# Take a look at the default priors\nget_prior(\n  formula = formula_log_gamm_stress, \n  family = binomial(link = \"logit\"), \n  data = stress_50_gamm\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                 \n---------------------  ----------  -------------------------------------\n                       b                                                \n                       b           groupHL                              \n                       b           groupHL:stressOxytone                \n                       b           groupL2                              \n                       b           groupL2:stressOxytone                \n                       b           stime_zero_1                         \n                       b           stime_zero:stressOxytone_1           \n                       b           stressOxytone                        \nstudent_t(3, 0, 2.5)   Intercept                                        \nstudent_t(3, 0, 2.5)   sd                                               \n                       sd                                               \n                       sd          Intercept                            \nstudent_t(3, 0, 2.5)   sds                                              \n                       sds         s(time_zero, bs = \"cr\")              \n                       sds         s(time_zero, by = stress, bs = \"cr\")\n:::\n\n```{.r .cell-code}\n# Set priors\nstress_log_gamm_priors <- c(\n  prior(normal(0, 3), class = Intercept), \n  prior(normal(0, 3), class = b), \n  prior(student_t(3, 0, 5.9), class = sds), \n  prior(cauchy(0, 2), class = sd)\n)\n\n# Fit model\ngamm_log_group_stress <- brm(\n  formula = formula_log_gamm_stress, \n  family =  binomial(link = \"logit\"), \n  prior = stress_log_gamm_priors, \n  iter = 11000, warmup = 1000, cores = 4, threads = threading(2), thin = 10, \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = stress_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_group_stress\")\n)\n```\n:::\n\n\n\n\n# Bilingual model\n\nNow we will fit a separate model to the bilingual groups' data. \nThis model includes standardized proficiency and use scores. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up data frame\nbi_50_gamm <- stress_50 %>% \n  filter(group != \"Monolingual\", \n    time_zero > -4, time_zero < 10) %>% \n  mutate(id = as.factor(id), \n    target = as.factor(target), \n    stress = as.ordered(stress), \n    stress = fct_relevel(stress, \"Paroxytone\"), \n    group = fct_relevel(group, \"HL\"))\n\n# Set contrasts for stress\ncontrasts(bi_50_gamm$stress) <- \"contr.treatment\" \n\n# Set model formula\nformula_gamm_bi <- bf(\n  target_count | trials(50) ~ 1 + group * stress + \n    prof_z * use_z + \n    s(time_zero, bs = \"cr\", k = 3) + \n    s(time_zero, by = stress, bs = \"cr\", k = 3) +\n    #s(time_zero, id, bs = \"fs\", m = 1, k = 3) + \n    #s(time_zero, target, bs = \"fs\", m = 1, k = 3)\n    (1 | id), \n  family = binomial(link = \"logit\")\n)\n\n# Get model default priors\nget_prior(\n  formula = formula_gamm_bi, \n  data = bi_50_gamm\n) %>% \n  as_tibble() %>% \n  select(prior, class, coef) %>% \n  knitr::kable(format = \"pandoc\")\n```\n\n::: {.cell-output-display}\nprior                  class       coef                                        \n---------------------  ----------  --------------------------------------------\n                       b                                                       \n                       b           groupL2                                     \n                       b           groupL2:stressOxytone                       \n                       b           prof_z                                      \n                       b           prof_z:use_z                                \n                       b           stime_zero_1                                \n                       b           stime_zero:stressOxytone_1                  \n                       b           stressOxytone                               \n                       b           use_z                                       \nstudent_t(3, 0, 2.5)   Intercept                                               \nstudent_t(3, 0, 2.5)   sd                                                      \n                       sd                                                      \n                       sd          Intercept                                   \nstudent_t(3, 0, 2.5)   sds                                                     \n                       sds         s(time_zero, bs = \"cr\", k = 3)              \n                       sds         s(time_zero, by = stress, bs = \"cr\", k = 3) \n\n\n\nPrior predictive checks for bilingual model.\n:::\n\n```{.r .cell-code}\n# Set priors\nbi_gamm_priors <- c(\n  prior(normal(0, 1.5), class = Intercept), \n  prior(normal(0, 3), class = b), \n  prior(normal(0, 2), class = sds), \n  prior(cauchy(0, 2), class = sd)\n)\n\n# Fit model to test priors\ngamm_log_bi_stress_prior_fit <- brm(\n  formula = formula_gamm_bi, \n  family = binomial(link = \"logit\"), \n  prior = bi_gamm_priors, \n  iter = 2000, warmup = 1000, cores = 4, \n  sample_prior = \"only\", \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = bi_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_bi_stress_prior_fit\")\n)\n\n# Prior predictive checks\nbi_50_gamm %>% \n  expand(time_zero = seq(-4, 10, length.out = 50), group, stress, \n    id = \"ahs01\", prof_z = 0, use_z = 0) %>%\n  add_epred_draws(gamm_log_bi_stress_prior_fit, ndraws = 100) %>% \n  ggplot() + \n    aes(x = time_zero, y = .epred/50) + \n    facet_grid(stress ~ group) + \n    geom_line(aes(group = .draw), alpha = 0.2, size = 0.2, color = \"darkred\") + \n    labs(y = \"P(Target fixation)\", x = \"Time course\")\n```\n\n::: {.cell-output-display}\n![Prior predictive checks for bilingual model.](../figs/fit-bilingual-gamm-1.png){width=100%}\n:::\n\n```{.r .cell-code}\n# Fit actual model\ngamm_log_bi_stress <- brm(\n  formula = formula_gamm_bi, \n  family = binomial(link = \"logit\"), \n  prior = bi_gamm_priors, \n  iter = 11000, warmup = 1000, cores = 4, threads = threading(2), thin = 10, \n  backend = \"cmdstanr\", \n  control = list(adapt_delta = 0.9999, max_treedepth = 15), \n  data = bi_50_gamm, \n  file = here(\"models\", \"gamms\", \"gamm_log_bi_stress\")\n)\n```\n:::\n\n\n\n# Plots\n\n## All data\n\n\n::: {.cell hash='05_gamms_cache/html/group-comparison-plot_85bb45107fcfbea418ce93a82982fe21'}\n\n```{.r .cell-code}\n# Full model\ngamm_log_group_stress_draws <- gamm_log_group_stress %>% \n  emmeans(spec = ~ time_zero + stress + group, epred = T, \n    at = list(time_zero = seq(-4.8, 12.8, 0.25)), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws()\n\ngamm_log_group_stress_plot <- gamm_log_group_stress_draws %>% \n  ggplot() + \n    aes(x = time_zero, y = .value / 50, color = group) + \n    facet_grid(. ~ stress) + \n    geom_hline(yintercept = 0.5, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(show.legend = F) + \n    stat_summary(fun = median, geom = \"line\") + \n    scale_fill_brewer(palette = \"Greys\") +\n    scale_color_manual(name = NULL, values = my_colors) + \n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(0.28, 1.02), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"P(Target fixation)\", x = \"Time course\") + \n    theme(legend.position = c(0.12, 0.86), \n          legend.text = element_text(size = 10))\ngamm_log_group_stress_plot\n```\n\n::: {.cell-output-display}\n![Probability of fixating on target as a function of stress for all three groups. The time course is centered around the target syllable offset (point 0). Vertical lines represent 200ms after target syllable offset. Lines represent group trajectories plus 95%, 80%, and 50% credible intervals.](../figs/group-comparison-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/group-diff-smooths-plot_e88e65061975b3772051fa35aa10b331'}\n\n```{.r .cell-code}\n# Calculate difference smooths\ngamm_log_group_stress_draws_diffs <- gamm_log_group_stress_draws %>% \n  pivot_wider(names_from = group, values_from = .value) %>% \n  mutate(`Monolingual - HL` = Monolingual - HL, \n    `Monolingual - L2` = Monolingual - L2, \n    `HL - L2` = HL - L2) %>% \n  pivot_longer(cols = `Monolingual - HL`:`HL - L2`, names_to = \"comp\", \n    values_to = \"val\")\n\n# Plot smooths\ngamm_log_group_stress_draws_diffs %>% \n  mutate(comp = fct_relevel(comp, \"Monolingual - HL\", \"Monolingual - L2\")) %>% \n  ggplot() + \n    facet_grid(comp ~ stress) + \n    aes(x = time_zero, y = val / 50) + \n    geom_hline(yintercept = 0, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(color = \"#11111100\", show.legend = F, \n      .width = c(0.1, 0.35, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)) +\n    scale_color_viridis_d(aesthetics = \"fill\", option = \"C\") +\n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(-0.15, 0.3), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"Difference smooths\", x = \"Time course\")\n```\n\n::: {.cell-output-display}\n![Pairwise difference smooths for paroxytone and oxytone items. From dark to light, colors represent 95%, 80%, 70%, 60%, 50%, 35% and 10% credible intervals.](../figs/group-diff-smooths-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/group-prediction-plot_d78011999a08a079a241f033ac89676c'}\n\n```{.r .cell-code}\ngamm_log_group_stress_dat <- gamm_log_group_stress %>% \n  emmeans(spec = ~ time_zero + stress + group, \n    at = list(time_zero = 4), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws() %>% \n  mutate(prop = plogis(.value))\n\ngamm_log_group_stress_dat %>% \n  ggplot() + \n    aes(x = prop, y = group, fill = stat(x > 0.51)) + \n    facet_grid(. ~ stress) + \n    geom_rect(data = tibble(x = c(0.49, 0.51), y = NULL), \n      aes(xmin = min(x), xmax = max(x), ymin = -Inf, ymax = Inf),\n      fill = \"lightblue\", alpha = 0.2, inherit.aes = FALSE) +\n    geom_vline(xintercept = 0.5, lty = 3, size = 0.5) + \n    stat_slab(alpha = 0.7, color = \"white\", show.legend = F) +\n    stat_pointinterval(pch = 21, point_fill = \"white\", show.legend = F) +\n    scale_fill_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    scale_color_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    coord_cartesian(xlim = c(NA, NA)) + \n    labs(y = NULL, x = \"P(Target fixation)\")\n```\n\n::: {.cell-output-display}\n![Proportion of target fixations 200ms after the offset of 1st syllable for monolinguals, heritage learners, and L2 learners in paroxytone (*CANto*) and oxytone (*canTO*) conditions. The vertical dotted line marks chance (50%) surrounded by a &pm;1% region of practical equivalence (ROPE). Density mass of the posterior distribution that falls within the ROPE is discolored (pinkish).](../figs/group-prediction-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/marginal-slopes-plot_f86138990845068df7c02fc66288850b'}\n\n```{.r .cell-code}\n# Get marginal slope when time_zero = 4 as an estimate of rate of \n# fixation on targets\n# This can be used in a plot (if necessary) by estimating the y value \n# at the desired x (time_zero == 4, for example) and then calculating \n# the intercept using `find_intercept` (see example below)\n\n# Get posterior estimates of marginal slopes\nmarginal_slopes_p1 <- gamm_log_group_stress %>% \n  emtrends(\n    spec = ~ time_zero + stress + group, \n    var = \"time_zero\", \n    at = list(time_zero = 4), \n    delta.var = 0.001, \n    epred = T) %>% \n  gather_emmeans_draws() %>% \n  ungroup() %>% \n  mutate(group = str_replace_all(group, \"Monolingual\", \"Mono\"), \n         group = fct_relevel(group, \"L2\", \"HL\")) %>% \n  ggplot() + \n    aes(x = .value / 50, y = group, fill = group) + \n    facet_grid(. ~ stress) + \n    stat_slab(alpha = 0.7, color = \"white\", show.legend = F) +\n    stat_pointinterval(pch = 21, point_fill = \"white\", show.legend = F) +\n    scale_fill_manual(name = NULL, values = my_colors, labels = NULL) + \n    coord_cartesian(xlim = c(NA, NA)) + \n    labs(y = NULL, x = \"Marginal slope estimate\") \nmarginal_slopes_p1\n```\n\n::: {.cell-output-display}\n![Marginal slope estimates 200ms after the offset of 1st syllable for monolinguals, heritage learners, and L2 learners in paroxytone (*CANto*) and oxytone (*canTO*) conditions.](../figs/marginal-slopes-plot-1.png){width=100%}\n:::\n:::\n\n::: {.cell hash='05_gamms_cache/html/marginal-slopes-plot-2_a3676cdc9c91c3fbe047307026947abf'}\n\n```{.r .cell-code}\nlines <- bind_rows(\n  gamm_log_group_stress %>% \n    emmeans(specs = ~ time_zero + stress + group, \n      at = list(time_zero = 4), \n      epred = T) %>% \n    gather_emmeans_draws() %>% \n    mutate(.value = .value / 50) %>% \n    #median_hdi() %>% \n    transmute(stress, group, .draw, .value, term = \"y\"), \n\n   gamm_log_group_stress %>% \n     emtrends(spec = ~ time_zero + stress + group, \n       var = \"time_zero\", \n       at = list(time_zero = 4), \n       delta.var = 0.001, \n       epred = T) %>% \n     gather_emmeans_draws() %>% \n     mutate(.value = .value / 50) %>% \n     #median_hdi() %>% \n     transmute(stress, group, .draw, .value, term = \"slope\")) %>% \n  pivot_wider(names_from = term, values_from = .value) %>% \n  mutate(x = 4, intercept = find_intercept(x1 = 4, y1 = y, slope = slope))\n\nmarginal_slopes_p1b <- gamm_log_group_stress %>% \n  emtrends(\n    spec = ~ time_zero + stress + group, \n    var = \"time_zero\", \n    at = list(time_zero = 4), \n    delta.var = 0.001, \n    epred = T) %>% \n  gather_emmeans_draws() %>% \n  ggplot() + \n    aes(y = .value / 50, x = group, fill = group) + \n    facet_grid(. ~ stress) + \n    stat_slab(alpha = 0.7, color = \"white\", show.legend = F) +\n    stat_pointinterval(pch = 21, point_fill = \"white\", show.legend = F) +\n    scale_fill_manual(name = NULL, values = my_colors, labels = NULL) + \n    coord_cartesian(ylim = c(NA, NA)) + \n    labs(x = NULL, y = \"Marginal slope estimate\") \n\nmarginal_slopes_p2 <- gamm_log_group_stress_plot + \n  geom_abline(data = sample_n(lines, 200), alpha = 0.03, size = 0.25, \n    aes(intercept = intercept, slope = slope, color = group)) + \n    theme(strip.text.x = element_blank())\n\nmarginal_slopes_p1b / marginal_slopes_p2\n```\n\n::: {.cell-output-display}\n![Marginal slope estimates 200ms after the offset of 1st syllable for monolinguals, heritage learners, and L2 learners in paroxytone (*CANto*) and oxytone (*canTO*) conditions.](../figs/marginal-slopes-plot-2-1.png){width=100%}\n:::\n:::\n\n\n\n\n\n## Bilingual model\n\n\n::: {.cell hash='05_gamms_cache/html/bi-comparison-plot_f298a5986bdc815bd964b3edc0565201'}\n\n```{.r .cell-code}\ngamm_log_bi_stress_draws <- gamm_log_bi_stress %>% \n  emmeans(\n    spec = ~ time_zero + stress + group + use_z + prof_z, \n    epred = T, \n    at = list(\n      time_zero = seq(-4.8, 12.8, 0.25), \n      prof_z = 0, use_z = 0\n      ), \n    ra_formula = NULL) %>% \n  gather_emmeans_draws()\n\ngamm_bi_p1 <- gamm_log_bi_stress_draws %>% \n  ggplot() + \n    aes(x = time_zero, y = .value / 50, color = stress) + \n    facet_grid(. ~ group) + \n    geom_hline(yintercept = 0.5, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(show.legend = F) + \n    stat_summary(fun = mean, geom = \"line\") + \n    scale_fill_brewer(palette = \"Greys\") +\n    scale_color_brewer(name = NULL, palette = \"Dark2\", \n      labels = c(\"Paroxytone\\n(CANta)\", \"Oxytone\\n(canTO)\")) +  \n    coord_cartesian(xlim = c(-4.8, 12.8), ylim = c(0.28, 1.02), \n      expand = F) + \n    scale_x_continuous(breaks = seq(-4, 12, 4)) + \n    labs(y = \"P(Target fixation)\", x = NULL) + \n    theme(legend.position = c(0.12, 0.86), \n          legend.key.size = unit(1.7, 'lines'), \n          legend.text = element_text(size = 10), \n      axis.text.x = element_blank(), axis.ticks.x = element_blank())\n\n# Calculate difference smooths\ngamm_log_bi_stress_draws_diffs <- gamm_log_bi_stress_draws %>% \n  pivot_wider(names_from = stress, values_from = .value) %>% \n  mutate(diff = Paroxytone - Oxytone) \n\n# Plot smooths\ngamm_bi_p2 <- gamm_log_bi_stress_draws_diffs %>% \n  ggplot() + \n    aes(x = time_zero, y = diff / 50) + \n    facet_grid(. ~ group) + \n    geom_hline(yintercept = 0, lty = 3, size = 0.5) + \n    geom_vline(xintercept = 0 + 4, lty = 3, size = 0.5) + \n    stat_lineribbon(color = \"#11111100\", show.legend = F, \n      .width = c(0.1, 0.35, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)) +\n    scale_color_viridis_d(aesthetics = \"fill\", option = \"C\") +\n    coord_cartesian(xlim = c(-4.8, 12.8), expand = F) +\n    scale_x_continuous(breaks = seq(-4, 12, 4), labels = seq(-200, 600, 200)) + \n    labs(y = \"Difference smooths\\nParoxytone - Oxytone\", x = \"Time course\") + \n    theme(strip.background = element_blank(), strip.text = element_blank())\n\ngamm_bi_p1 / gamm_bi_p2\n```\n\n::: {.cell-output-display}\n![Probability of fixating on target as a function of stress for the bilingual groups. The time course is centered around the target syllable offset (point 0). Vertical lines represent 200ms after target syllable offset. Lines represent paroxytone ('CANta', green) and oxytone ('canTO', orange) conditions plus 95%, 80%, and 50% credible intervals. Pairwise difference smooths for paroxytone and oxytone items. From dark to light, colors represent 95%, 80%, 70%, 60%, 50%, 35% and 10% credible intervals.](../figs/bi-comparison-plot-1.png){width=100%}\n:::\n:::\n\n\n\n# Tables\n\n## Group model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_gamm_tib_prep <- bind_rows(\n  summary(gamm_log_group_stress)[[\"fixed\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Population\"),\n  summary(gamm_log_group_stress)[[\"random\"]][[\"id\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Grouping\"),\n  summary(gamm_log_group_stress)[[\"splines\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Smooths\")\n) %>% \n  mutate(across(-c(\"Effect\", \"Term\"), specify_decimal, k = 2)) %>% \n  mutate(Term = case_when(\n      Term == \"groupHL\" ~ \"HL\", \n      Term == \"groupL2\" ~ \"L2\", \n      Term == \"stressOxytone\" ~ \"Oxytone\", \n      Term == \"groupHL:stressOxytone\" ~ \"HL:Oxytone\", \n      Term == \"groupL2:stressOxytone\" ~ \"L2:Oxytone\", \n      Term == \"stime_zero_1\" ~ \"Time\", \n      Term == \"stime_zero:stressOxytone_1\" ~ \"Time:Oxytone\", \n      Term == \"sds(stime_zero_1)\" ~ \"sds(Time)\", \n      Term == \"sds(stime_zerostressOxytone_1)\" ~ \"sds(Time:Oxytone)\", \n      TRUE ~ Term)) \n\ngroup_gamm_tib <- group_gamm_tib_prep %>% \n  transmute(Effect, Term, Estimate, \n    HDI = glue::glue(\"[{`l-95% CI`}, {`u-95% CI`}]\"), \n    Rhat, `Bulk ESS` = Bulk_ESS, `Tail ESS` = Tail_ESS) %>% \n  mutate(\n    Estimate = str_replace_all(Estimate, \"-\", \"\\U2212\"), \n    HDI = str_replace_all(HDI, \"-\", \"\\U2212\") \n  ) %>% \n  write_csv(here(\"tables\", \"tab_group_gamm_mod.csv\"))\n\ngroup_gamm_tib %>% \n  knitr::kable(format = \"pandoc\", \n    align = c(\"l\", \"l\", \"r\", \"r\", \"r\", \"r\", \"r\"), \n    caption = \"Group GAMM summary.\")\n```\n\n::: {.cell-output-display}\nTable: Group GAMM summary.\n\nEffect       Term                 Estimate              HDI   Rhat   Bulk ESS   Tail ESS\n-----------  ------------------  ---------  ---------------  -----  ---------  ---------\nPopulation   Intercept                0.60     [0.44, 0.76]   1.00     797.53    1436.65\nPopulation   HL                      −0.30   [−0.53, −0.11]   1.01     744.97    1223.82\nPopulation   L2                      −0.43   [−0.64, −0.23]   1.00     708.42     761.10\nPopulation   Oxytone                  0.06     [0.05, 0.08]   1.00    3429.99    3735.29\nPopulation   HL:Oxytone              −0.44   [−0.46, −0.42]   1.00    3469.26    3630.77\nPopulation   L2:Oxytone               0.00    [−0.02, 0.02]   1.00    3114.31    3926.50\nPopulation   Time                    −0.26   [−0.26, −0.26]   1.00    3581.16    3934.31\nPopulation   Time:Oxytone            −0.01   [−0.01, −0.01]   1.00    3865.39    3348.79\nGrouping     sd(Intercept)            0.45     [0.40, 0.51]   1.00    1088.45    1923.43\nSmooths      sds(Time)                0.03     [0.02, 0.06]   1.00    1620.98    2149.99\nSmooths      sds(Time:Oxytone)        0.02     [0.01, 0.04]   1.00    2522.74    3383.84\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get posterior and cleanup colnames and term names\ngroup_gamm_tab_dat <- as_draws_df(gamm_log_group_stress) %>% \n  select(starts_with(c(\"b_\", \"bs_\", \"sd_\", \"sds_\"))) %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(type = case_when(\n      startsWith(name, \"b_\") ~ \"Parametric\\nPopulation\", \n      startsWith(name, \"bs_\") ~ \"Non-parametric\\nPopulation\", \n      startsWith(name, \"sd_\") ~ \"Grouping\", \n      startsWith(name, \"sds_\") ~ \"Smooth\"), \n    type = fct_relevel(type, \"Parametric\\nPopulation\", \n      \"Non-parametric\\nPopulation\", \"Grouping\")) %>% \n  mutate(name = case_when(\n      name == \"b_Intercept\" ~ \"Intercept\", \n      name == \"b_groupHL\" ~ \"HL\", \n      name == \"b_groupL2\" ~ \"L2\", \n      name == \"b_stressOxytone\" ~ \"Oxytone\", \n      name == \"b_groupHL:stressOxytone\" ~ \"HL:Oxytone\", \n      name == \"b_groupL2:stressOxytone\" ~ \"L2:Oxytone\", \n      name == \"bs_stime_zero_1\" ~ \"Time\", \n      name == \"bs_stime_zero:stressOxytone_1\" ~ \"Time:Oxytone\", \n      name == \"sd_id__Intercept\" ~ \"σ\\nID\", \n      name == \"sds_stime_zero_1\" ~ \"σ\\nTime\", \n      name == \"sds_stime_zerostressOxytone_1\" ~ \"σ\\nTime:Oxytone\", \n    )\n  ) %>% \n  mutate(name = fct_relevel(name, \"σ\\nTime:Oxytone\", \"σ\\nTime\", \"σ\\nID\", \n    \"Time:Oxytone\", \"Time\", \"L2:Oxytone\", \"HL:Oxytone\", \"Oxytone\", \"L2\", \"HL\", \n    \"Intercept\"))\n\n# Summarize posterior for printing estimates in plot\ngroup_gamm_summary <- group_by(group_gamm_tab_dat, name, type) %>% \n  mean_qi(value, .width = 0.95) %>% \n  mutate_if(is.numeric, specify_decimal, k = 2) %>% \n  mutate(label = glue::glue(\"{value} [{.lower}, {.upper}]\"), \n         label = str_replace_all(label, \"-\", \"\\U2212\"))\n\n# Forest plot\ngroup_gamm_tab_dat %>% \n  ggplot(., aes(x = value, y = name)) + \n    facet_grid(type ~ ., scales = \"free\", space = \"free\") + \n    geom_vline(xintercept = 0, lty = 3) + \n    stat_pointinterval(point_fill = \"white\",  pch = 21, show.legend = F) +\n    geom_text(data = group_gamm_summary, \n      hjust = 1, family = \"Times\", size = 3.25, \n      aes(group = type, label = label, x = -0.65)) +\n    coord_cartesian(xlim = c(-0.95, 0.8)) + \n    scale_x_continuous(breaks = c(-0.5, 0, 0.5, 1)) + \n    labs(y = NULL, x = \"Estimate\") + \n    theme(plot.margin = unit(x = c(0, 0, 0, 0), units = \"mm\"), \n      strip.placement = \"outside\", strip.background = element_blank(), \n      axis.text.y = element_text(hjust = 1), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](../figs/forest-plot-group-gamm-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_prediction_tib <- gamm_log_group_stress_dat %>% \n  group_by(stress, group) %>% \n  summarize(.groups = \"drop\", \n    hdi = mean_qi(prop), \n    rope = rope(prop, range = c(0, 0.51)), \n    PD = pd(prop, null = 0.5)[1]) %>% \n  transmute(Group = group, Stress = stress, Estimate = hdi$y, \n    lower = hdi$ymin, upper = hdi$ymax, ROPE = rope$ROPE_Percentage, PD) %>% \n  mutate_if(is.numeric, specify_decimal, k = 2) %>% \n  transmute(Group, Stress, Estimate, \n    HDI = glue::glue(\"[{lower}, {upper}]\"), ROPE, PD, \n    parameter = glue::glue(\"{Group}_{Stress}\")) %>% \n  arrange(Group) %>% \n  write_csv(here(\"tables\", \"tab_group_prediction.csv\"))\n\ngroup_prediction_tib %>% \n  select(-parameter) %>% \n  knitr::kable(format = \"pandoc\", \n    align = c(\"l\", \"l\", \"r\", \"r\", \"r\", \"r\"), \n    caption = \"Group prediction summary.\")\n```\n\n::: {.cell-output-display}\nTable: Group prediction summary.\n\nGroup         Stress        Estimate            HDI   ROPE     PD\n------------  -----------  ---------  -------------  -----  -----\nMonolingual   Paroxytone        0.64   [0.61, 0.68]   0.00   1.00\nMonolingual   Oxytone           0.66   [0.63, 0.70]   0.00   1.00\nHL            Paroxytone        0.57   [0.54, 0.60]   0.00   1.00\nHL            Oxytone           0.48   [0.45, 0.52]   0.97   0.85\nL2            Paroxytone        0.54   [0.51, 0.57]   0.01   1.00\nL2            Oxytone           0.56   [0.53, 0.59]   0.00   1.00\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_marginal_slopes_post <- lines %>% \n  ungroup() %>% \n  select(stress, group, slope) %>% \n  group_by(stress, group) %>% \n  mutate(draw = seq_along(group)) %>% \n  pivot_wider(names_from = \"group\", values_from = \"slope\") %>% \n  transmute(stress, \n    mono_hl = Monolingual - HL, mono_l2 = Monolingual - L2, hl_l2 = HL - L2) %>% \n  pivot_longer(cols = -stress, names_to = \"comp\", values_to = \"diff\") %>% \n  mutate(comp = str_replace_all(comp, \"_\", \" - \"), \n         comp = str_to_upper(comp), \n         comp = str_replace_all(comp, \"MONO\", \"Mono\"))\n\nmarginal_slopes_p2 <- group_marginal_slopes_post %>% \n  ggplot() + \n    aes(x = diff, y = comp, fill = stat(abs(x) >= 0.001)) + \n    facet_grid(. ~ stress) + \n    geom_rect(data = tibble(x = c(-0.001, 0.001), y = NULL), \n      aes(xmin = min(x), xmax = max(x), ymin = -Inf, ymax = Inf),\n      fill = \"lightblue\", alpha = 0.2, inherit.aes = FALSE) +\n    geom_vline(xintercept = 0, lty = 3, size = 0.5) + \n    stat_slab(alpha = 0.7, color = \"white\", show.legend = F) +\n    stat_pointinterval(pch = 21, point_fill = \"white\", show.legend = F) +\n    scale_fill_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    scale_color_manual(name = NULL, values = my_colors[2:3], labels = NULL) + \n    coord_cartesian(xlim = c(-0.011, NA)) + \n    labs(y = NULL, x = \"Difference estimate\") \n\nmarginal_slopes_p1 / marginal_slopes_p2\n```\n\n::: {.cell-output-display}\n![](../figs/group-marginal-slopes-table-1.png){width=100%}\n:::\n\n```{.r .cell-code}\ngroup_marginal_slopes_tib <- group_marginal_slopes_post %>% \n  group_by(stress, comp) %>% \n  summarize(.groups = \"drop\", \n    hdi = mean_qi(diff), \n    rope = rope(diff, range = c(-0.001, 0.001)), \n    PD = pd(diff, null = 0)[1]) %>% \n  transmute(Stress = stress, Comparison = comp, Estimate = hdi$y, \n    lower = hdi$ymin, upper = hdi$ymax, ROPE = rope$ROPE_Percentage, PD) %>% \n  mutate_if(is.numeric, specify_decimal, k = 3) %>% \n  transmute(Stress, Comparison, Estimate, \n    HDI = glue::glue(\"[{lower}, {upper}]\"), ROPE, PD, \n    parameter = glue::glue(\"{Stress}_{Comparison}\")) %>% \n  arrange(Stress) %>% \n  write_csv(here(\"tables\", \"tab_group_marginal_slopes.csv\"))\n\ngroup_marginal_slopes_tib %>% \n  select(-parameter) %>% \n  knitr::kable(format = \"pandoc\", \n    align = c(\"l\", \"l\", \"r\", \"r\", \"r\", \"r\"), \n    caption = \"Group marginal slopes pairwise comparisons summary.\")\n```\n\n::: {.cell-output-display}\nTable: Group marginal slopes pairwise comparisons summary.\n\nStress       Comparison    Estimate                HDI    ROPE      PD\n-----------  -----------  ---------  -----------------  ------  ------\nParoxytone   HL - L2         -0.001    [-0.003, 0.000]   0.514   0.922\nParoxytone   Mono - HL       -0.004   [-0.008, -0.001]   0.000   0.999\nParoxytone   Mono - L2       -0.006   [-0.009, -0.003]   0.000   1.000\nOxytone      HL - L2          0.001     [0.000, 0.002]   0.697   0.957\nOxytone      Mono - HL       -0.006   [-0.010, -0.004]   0.000   1.000\nOxytone      Mono - L2       -0.006   [-0.009, -0.003]   0.000   1.000\n:::\n:::\n\n\n## Bilingual model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbi_gamm_tib_prep <- bind_rows(\n  summary(gamm_log_bi_stress)[[\"fixed\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Population\"),\n  summary(gamm_log_bi_stress)[[\"random\"]][[\"id\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Grouping\"),\n  summary(gamm_log_bi_stress)[[\"splines\"]] %>% \n    as_tibble(rownames = \"Term\") %>% \n    mutate(Effect = \"Smooths\")\n) %>% \n  mutate(across(-c(\"Effect\", \"Term\"), specify_decimal, k = 2)) %>% \n  mutate(Term = case_when(\n      Term == \"groupL2\" ~ \"L2\", \n      Term == \"stressOxytone\" ~ \"Oxytone\", \n      Term == \"prof_z\" ~ \"Proficiency\", \n      Term == \"use_z\" ~ \"Use\", \n      Term == \"groupL2:stressOxytone\" ~ \"L2:Oxytone\", \n      Term == \"stime_zero_1\" ~ \"Time\", \n      Term == \"stime_zero:stressOxytone_1\" ~ \"Time:Oxytone\", \n      Term == \"sds(stime_zero_1)\" ~ \"sds(Time)\", \n      Term == \"sds(stime_zerostressOxytone_1)\" ~ \"sds(Time:Oxytone)\", \n      TRUE ~ Term)) \n\nbi_gamm_tib <- bi_gamm_tib_prep %>% \n  transmute(Effect, Term, Estimate, \n    HDI = glue::glue(\"[{`l-95% CI`}, {`u-95% CI`}]\"), \n    Rhat, `Bulk ESS` = Bulk_ESS, `Tail ESS` = Tail_ESS) %>% \n  mutate(\n    Estimate = str_replace_all(Estimate, \"-\", \"\\U2212\"), \n    HDI = str_replace_all(HDI, \"-\", \"\\U2212\") \n  ) %>% \n  write_csv(here(\"tables\", \"tab_bi_gamm_mod.csv\"))\n\nbi_gamm_tib %>% \n  knitr::kable(format = \"pandoc\", \n    align = c(\"l\", \"l\", \"r\", \"r\", \"r\", \"r\", \"r\"), \n    caption = \"Bilingual GAMM summary.\")\n```\n\n::: {.cell-output-display}\nTable: Bilingual GAMM summary.\n\nEffect       Term                 Estimate              HDI   Rhat   Bulk ESS   Tail ESS\n-----------  ------------------  ---------  ---------------  -----  ---------  ---------\nPopulation   Intercept                0.39     [0.24, 0.54]   1.00     922.53    1521.88\nPopulation   L2                      −0.14    [−0.35, 0.07]   1.00     987.96    1527.22\nPopulation   Oxytone                 −0.39   [−0.41, −0.38]   1.00    3526.63    3831.69\nPopulation   Proficiency              0.03    [−0.08, 0.13]   1.00    1295.05    2034.59\nPopulation   Use                      0.01    [−0.10, 0.11]   1.00    1325.31    1976.81\nPopulation   L2:Oxytone               0.51     [0.50, 0.53]   1.00    3826.82    3752.23\nPopulation   prof_z:use_z            −0.09    [−0.21, 0.02]   1.00    1334.78    2066.52\nPopulation   Time                     1.49     [1.48, 1.51]   1.00    3957.52    3774.16\nPopulation   Time:Oxytone             0.00    [−0.02, 0.02]   1.00    3741.31    3649.01\nGrouping     sd(Intercept)            0.49     [0.42, 0.57]   1.00    1433.13    2323.04\nSmooths      sds(Time)                1.42     [0.37, 3.74]   1.00    3091.95    3338.58\nSmooths      sds(Time:Oxytone)        0.91     [0.10, 3.29]   1.00    2501.40    2420.84\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get posterior and cleanup colnames and term names\nbi_gamm_tab_dat <- as_draws_df(gamm_log_bi_stress) %>% \n  select(starts_with(c(\"b_\", \"bs_\", \"sd_\", \"sds_\"))) %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(type = case_when(\n      startsWith(name, \"b_\") ~ \"Parametric\\nPopulation\", \n      startsWith(name, \"bs_\") ~ \"Non-parametric\\nPopulation\", \n      startsWith(name, \"sd_\") ~ \"Grouping\", \n      startsWith(name, \"sds_\") ~ \"Smooth\"), \n    type = fct_relevel(type, \"Parametric\\nPopulation\", \n      \"Non-parametric\\nPopulation\", \"Grouping\")) %>% \n  mutate(name = case_when(\n      name == \"b_Intercept\" ~ \"Intercept\", \n      name == \"b_groupL2\" ~ \"L2\", \n      name == \"b_stressOxytone\" ~ \"Oxytone\", \n      name == \"b_prof_z\" ~ \"Proficiency\", \n      name == \"b_use_z\" ~ \"Use\", \n      name == \"b_groupL2:stressOxytone\" ~ \"L2:Oxytone\", \n      name == \"bs_stime_zero_1\" ~ \"Time\", \n      name == \"bs_stime_zero:stressOxytone_1\" ~ \"Time:Oxytone\", \n      name == \"sd_id__Intercept\" ~ \"σ\\nID\", \n      name == \"sds_stime_zero_1\" ~ \"σ\\nTime\", \n      name == \"sds_stime_zerostressOxytone_1\" ~ \"σ\\nTime:Oxytone\", \n    )\n  ) %>% \n  mutate(name = fct_relevel(name, \"σ\\nTime:Oxytone\", \"σ\\nTime\", \"σ\\nID\", \n    \"Time:Oxytone\", \"Time\", \"L2:Oxytone\", \"Use\", \"Proficiency\", \"Oxytone\", \n    \"L2\", \"Intercept\"))\n\n# Summarize posterior for printing estimates in plot\nbi_gamm_summary <- group_by(bi_gamm_tab_dat, name, type) %>% \n  mean_qi(value, .width = 0.95) %>% \n  mutate_if(is.numeric, specify_decimal, k = 2) %>% \n  mutate(label = glue::glue(\"{value} [{.lower}, {.upper}]\"), \n         label = str_replace_all(label, \"-\", \"\\U2212\")) \n\n# Forest plot\nbi_gamm_tab_dat %>% \n  ggplot(., aes(x = value, y = name)) + \n    facet_grid(type ~ ., scales = \"free\", space = \"free\") + \n    geom_vline(xintercept = 0, lty = 3) + \n    stat_pointinterval(point_fill = \"white\",  pch = 21, show.legend = F) +\n    geom_text(data = bi_gamm_summary, \n      hjust = 1, family = \"Times\", size = 3.25, \n      aes(group = type, label = label, x = -0.62)) +\n    coord_cartesian(xlim = c(-1.5, 4)) + \n    scale_x_continuous(breaks = c(-1, 0, 1, 2, 3, 4)) + \n    labs(y = NULL, x = \"Estimate\") + \n    theme(plot.margin = unit(x = c(0, 0, 0, 0), units = \"mm\"), \n      strip.placement = \"outside\", strip.background = element_blank(), \n      axis.text.y = element_text(hjust = 1), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](../figs/forest-plot-bi-gamm-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}